<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:localCommon="clr-namespace:CZY.SlackToolBox.AnimationBank.Common;assembly=CZY.SlackToolBox.AnimationBank"
                    xmlns:localMenu="clr-namespace:CZY.SlackToolBox.LuckyControl.NimbleMenu"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="SwitchMenu" TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <localMenu:ElementPosition x:Name="ControlPosition" Selector="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabControl}}" />

                        <localCommon:AnimateDoubleWrapper x:Name="LeftWrapper" Target="{Binding ElementName=ControlPosition, Path=MarginLeft}">
                            <localCommon:AnimateDoubleWrapper.Animation>
                                <DoubleAnimation Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn" Exponent="4" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </localCommon:AnimateDoubleWrapper.Animation>
                        </localCommon:AnimateDoubleWrapper>
                        <localCommon:AnimateDoubleWrapper x:Name="RightWrapper" Target="{Binding ElementName=ControlPosition, Path=MarginRight}">
                            <localCommon:AnimateDoubleWrapper.Animation>
                                <DoubleAnimation Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="09" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </localCommon:AnimateDoubleWrapper.Animation>
                        </localCommon:AnimateDoubleWrapper>


                        <localCommon:AnimateDoubleWrapper x:Name="LeftWrapper2" Target="{Binding ElementName=ControlPosition, Path=MarginLeft}">
                            <localCommon:AnimateDoubleWrapper.Animation>
                                <DoubleAnimation Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="09" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </localCommon:AnimateDoubleWrapper.Animation>
                        </localCommon:AnimateDoubleWrapper>
                        <localCommon:AnimateDoubleWrapper x:Name="RightWrapper2" Target="{Binding ElementName=ControlPosition, Path=MarginRight}">
                            <localCommon:AnimateDoubleWrapper.Animation>
                                <DoubleAnimation Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn" Exponent="4" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </localCommon:AnimateDoubleWrapper.Animation>
                        </localCommon:AnimateDoubleWrapper>
                        <localMenu:Switcher x:Name="LeftSwitcher"
                                             FalseResult="{Binding ElementName=LeftWrapper2}"
                                             TrueResult="{Binding ElementName=LeftWrapper}"
                                             Value="{Binding ElementName=ControlPosition, Path=IsLeftToRight}" />

                        <localMenu:Switcher x:Name="RightSwitcher"
                                             FalseResult="{Binding ElementName=RightWrapper2}"
                                             TrueResult="{Binding ElementName=RightWrapper}"
                                             Value="{Binding ElementName=ControlPosition, Path=IsLeftToRight}" />
                        <Grid x:Name="HeaderPanelGrid"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Panel.ZIndex="1">
                            <TabPanel x:Name="HeaderPanel" IsItemsHost="true" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="{Binding ElementName=LeftSwitcher, Path=Result.Current}" />
                                <Rectangle Grid.Column="2" Width="{Binding ElementName=RightSwitcher, Path=Result.Current}" />
                                <Rectangle Grid.Column="1"
                                               Height="3"
                                               Margin="7,0,7,-2"
                                               RadiusX="2"
                                               RadiusY="2"
                                               VerticalAlignment="Bottom"
                                               Fill="{StaticResource TabControlMenuSelectedIndex}" />
                            </Grid>
                        </Grid>
                        <Border x:Name="ContentPanel"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="SwitchMenuItem"  TargetType="TabItem">
        <Setter Property="Template"  >
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Panel" BorderThickness="1,1,1,0"  BorderBrush="{StaticResource TabControlMenuBorderBrush}"    >
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="16,2"
                                          ></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TabControlMenuForeground}"></Setter>
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource TabControlMenuSelectedPanel}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TabControlMenuSelectedForeground}"></Setter>
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource TabControlMenuSelectedPanel}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>