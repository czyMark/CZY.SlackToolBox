<UserControl x:Class="CZY.SlackToolBox.LuckyControl.NimbleMenu.CircularMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CZY.SlackToolBox.LuckyControl.NimbleMenu"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>

            <Style TargetType="{x:Type local:CircularMenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:CircularMenuItem">
                            <Grid VerticalAlignment="Center" x:Name="BackGrid" >
                                <Grid.RenderTransform>
                                    <RotateTransform x:Name="PART_RotateTransform" Angle="{TemplateBinding Angle}" CenterX="100" CenterY="100"></RotateTransform>
                                </Grid.RenderTransform>
                                <Path x:Name="PART_Path" Data="M 100,100 0,100 A 100,100 0 0 1 29.3,29.3z" 
                                      Visibility="{TemplateBinding ShowFill}"
                                  Fill="{TemplateBinding BackgroundColor}" 
                                      VerticalAlignment="Center"
                                      />
                                <Image Source="{TemplateBinding IconImage}" x:Name="MenuIcon" RenderTransformOrigin="0.5,0.5"
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Bottom" 
                                       Margin="30,12"
                                   Width="24" Height="24" >
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="-70"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=BackGrid,Path=IsMouseOver}"   Value="True"/>
                                        <Condition Binding="{Binding ElementName=PART_Path,Path=Visibility}"   Value="Visible"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_Path" Property="Opacity" Value="0.4"/>
                                    <Setter TargetName="MenuIcon" Property="Width" Value="26"/>
                                    <Setter TargetName="MenuIcon" Property="Height" Value="26"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=MenuIcon,Path=IsMouseOver}"   Value="True"/>
                                        <Condition Binding="{Binding ElementName=PART_Path,Path=Visibility}"   Value="Hidden"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_Path" Property="Opacity" Value="0.4"/>
                                    <Setter TargetName="MenuIcon" Property="Width" Value="26"/>
                                    <Setter TargetName="MenuIcon" Property="Height" Value="26"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </MultiDataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="CheckedStoryboard">
                <DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry"
                             Storyboard.TargetProperty="RadiusX"
                             Duration="00:00:0.4" To="80"/>
                <DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry"
                             Storyboard.TargetProperty="RadiusY"
                             Duration="00:00:0.4" To="80"/>
            </Storyboard>
            <Storyboard x:Key="UncheckedStoryboard">
                <DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry"
                             Storyboard.TargetProperty="RadiusX"
                             Duration="00:00:0.3" To="0"/>
                <DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry"
                             Storyboard.TargetProperty="RadiusY"
                             Duration="00:00:0.3" To="0"/>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>
    <Canvas>

        <ItemsControl   x:Name="MainMenu"   >
            <ItemsControl.Clip>
                <EllipseGeometry x:Name="PART_EllipseGeometry" RadiusX="0" RadiusY="0" Center="100,100"></EllipseGeometry>
            </ItemsControl.Clip>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:CircularMenuItem Angle="{Binding Angle}"   MenuTxt="{Binding Title}"  
                                            MenuItemID="{Binding MenuItemId}"
                                            ShowFill="{Binding ShowFill}"
                                            MouseLeftButtonUp="CircularMenuItem_MouseLeftButtonUp"
                                            BackgroundColor="{Binding FillColor}" IconImage="{Binding IconImage}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <ToggleButton  Canvas.Left="70" Canvas.Top="70" Height="60" x:Name="CoreBtn" Cursor="Hand">
            <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Ellipse x:Name="PART_Ellipse" Width="60" Height="60" Fill="#009AD8" ToolTip="关闭"/>
                        <Path x:Name="PART_Path" Data="M734.618 760.269c-24.013 24.013-62.925 24.013-86.886 0l-135.731-155.136-135.731 155.085c-24.013 24.013-62.925 24.013-86.886 0-24.013-24.013-24.013-62.925 0-86.886l141.21-161.28-141.261-161.382c-24.013-24.013-24.013-62.874 0-86.886s62.874-24.013 86.886 0l135.782 155.187 135.731-155.187c24.013-24.013 62.874-24.013 86.886 0s24.013 62.925 0 86.886l-141.21 161.382 141.21 161.28c24.013 24.013 24.013 62.925 0 86.938z"
                                      Fill="White" Stretch="Fill" Width="20" Height="20" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="PART_Path" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="45"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" TargetName="PART_Ellipse" Value="展开"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
            <ToggleButton.Triggers>
                <EventTrigger RoutedEvent="ToggleButton.Checked">
                    <BeginStoryboard Storyboard="{StaticResource CheckedStoryboard}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                    <BeginStoryboard Storyboard="{StaticResource UncheckedStoryboard}"/>
                </EventTrigger>
            </ToggleButton.Triggers>
        </ToggleButton>
    </Canvas>
</UserControl>
