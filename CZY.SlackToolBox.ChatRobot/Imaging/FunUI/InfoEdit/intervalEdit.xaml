<Window x:Class="CZY.SlackToolBox.ChatRobot.Imaging.FunUI.NotificationPage.IntervalEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CZY.SlackToolBox.ChatRobot.Imaging.FunUI.NotificationPage"
        xmlns:core="clr-namespace:CZY.SlackToolBox.ChatRobot.Core"  WindowStyle="None"
             mc:Ignorable="d"  ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent"
             d:DesignHeight="556" d:DesignWidth="830">
    <Window.Resources>
        <ResourceDictionary> 
            <SolidColorBrush x:Key="TextBox.Static.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FD3459"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FD3459"/>
            <Style  TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <!--背景、边框-->
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="1" 
                                    Background="#F2F3F5"
                                    SnapsToDevicePixels="True" CornerRadius="4">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                     </ScrollViewer>
                                    <Label Content="请输入" x:Name="Tip" Margin="16,6" IsHitTestVisible="False" FontSize="14" Visibility="Collapsed" Foreground="#999999"></Label>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>

                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Tip" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" TargetName="Tip" Value="Visible"/>
                                </Trigger>
                                
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </Window.Resources>
    <core:CornerClip CornerRadius="10" >
        <Grid>
            <Border Background="#1D2129" Opacity="0.6"/>

            <core:CornerClip CornerRadius="12" HorizontalAlignment="Center" VerticalAlignment="Center" >
                <Grid Width="374" Height="255" Background="#FFFFFF" >

                    <Label Foreground="#333333" HorizontalAlignment="Left" VerticalAlignment="Top"
                           Margin="16,20" FontSize="16" Padding="0"
                           >群发间隔时间</Label>
                    <Image Source="/imaging/images/Close-b.png" Width="16" Height="16"  Cursor="Hand" MouseLeftButtonDown="Image_MouseLeftButtonDown"
                           HorizontalAlignment="Right" VerticalAlignment="Top" Margin="15"></Image>


                    <ComboBox x:Name="IntervalTime"  Width="342" Height="36" FontSize="14" Foreground="#1D2129"
                              Margin="16,66,14,123"  SelectedIndex="0" SelectionChanged="combobox_SelectionChanged"
                              IsEditable="False" BorderBrush="#DDDDDD">
                        <ComboBoxItem Content="自定义" Tag="1"></ComboBoxItem>
                        <ComboBoxItem Content="1秒~4秒随机" Tag="2"></ComboBoxItem>
                        <ComboBoxItem Content="2秒~6秒随机" Tag="3"></ComboBoxItem>
                        <ComboBoxItem Content="3秒~8秒随机" Tag="4"></ComboBoxItem>
                        <ComboBoxItem Content="4秒~10秒随机" Tag="5"></ComboBoxItem>
                        <ComboBoxItem Content="5秒~12秒随机" Tag="6"></ComboBoxItem>
                    </ComboBox>

                    <StackPanel Margin="16,128,14,81" Orientation="Horizontal" x:Name="IntervalTimePanel" Height="36">
                        <TextBox    Background="#F2F3F5"  Width="128" 
               HorizontalAlignment="Left" VerticalAlignment="Center" Padding="16,10" Height="36" UndoLimit="1"  
                x:Name="InputSValue"        TextWrapping="NoWrap"   BorderThickness="0"  />

                        <Label Foreground="#333333" Width="10"   FontSize="14"
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               Margin="12,12" >~</Label>

                        <TextBox    Background="#F2F3F5"  Width="128"  x:Name="InputEValue"    
               HorizontalAlignment="Left" VerticalAlignment="Center" Padding="16,10" Height="36" UndoLimit="1"  
                TextWrapping="NoWrap"   BorderThickness="0"  />

                        <Label Foreground="#666666"   FontSize="14"
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               Margin="12,0,0,0" >秒随机</Label>

                    </StackPanel>


                    <Button Width="80" Height="32" Style="{StaticResource CancelBtn}"
                            Margin="190,177,104,16" Click="Cancel_Button_Click">取消</Button>
                    <Button Width="80" Height="32" Margin="278,177,16,16" 
                            Click="Confirm_Button_Click">确定</Button>
                </Grid>
            </core:CornerClip>

        </Grid>
    </core:CornerClip>
</Window>
